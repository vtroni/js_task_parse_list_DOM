{"mappings":"ACEA,IAGQ,EAQA,EAXF,EAAO,SAAS,gBAAgB,CAAC,SASrC,CANM,EAAgB,MAAM,IAAI,CAAC,GAAM,GAAG,CAAC,SAAC,CAA5C,EAGE,OAAO,WAFM,EAAQ,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,WAAY,IAG1D,IAEc,IAAI,CAAC,SAAC,CAAA,CAAG,CAAvB,EAA6B,OAAA,EAAI,C,GAE3B,EAAW,CAAI,CAAC,EAAE,CAAC,UAAU,CAEnC,EAAc,OAAO,CAAC,SAAtB,CAAA,EAAyB,IAAA,EAAA,EAAA,OAAA,CACvB,EAAS,WAAW,CAAC,EACvB,GAMkB,MAAM,IAAI,CAAC,GAAM,GAAG,CAAC,SAAC,CAAxC,EAME,MAAO,CACL,KANc,EAAQ,WAAW,CAAC,IAAI,GAOtC,SANe,EAAQ,OAAO,CAAC,QAAQ,CAOvC,OANa,EAAQ,OAAO,CAAC,MAAM,CAOnC,IANU,EAAQ,OAAO,CAAC,GAAG,AAO/B,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar list = document.querySelectorAll(\"ul li\");\nfunction sortList() {\n    var employeesList = Array.from(list).map(function(element) {\n        var text = element.dataset.salary.replace(/[^0-9.]/g, \"\");\n        return parseFloat(text);\n    });\n    employeesList.sort(function(a, b) {\n        return b - a;\n    });\n    var parentLi = list[0].parentNode;\n    employeesList.forEach(function(param) {\n        var element = param.element;\n        parentLi.appendChild(element);\n    });\n}\nsortList();\nfunction getEmployees() {\n    var employees = Array.from(list).map(function(element) {\n        var nameEmp = element.textContent.trim();\n        var position = element.dataset.position;\n        var salary = element.dataset.salary;\n        var age = element.dataset.age;\n        return {\n            name: nameEmp,\n            position: position,\n            salary: salary,\n            age: age\n        };\n    });\n    return employees;\n}\ngetEmployees();\n\n//# sourceMappingURL=index.1b97b35b.js.map\n","'use strict';\n\nconst list = document.querySelectorAll('ul li');\n\nfunction sortList() {\n  const employeesList = Array.from(list).map((element) => {\n    const text = element.dataset.salary.replace(/[^0-9.]/g, '');\n\n    return parseFloat(text);\n  });\n\n  employeesList.sort((a, b) => b - a);\n\n  const parentLi = list[0].parentNode;\n\n  employeesList.forEach(({ element }) => {\n    parentLi.appendChild(element);\n  });\n}\n\nsortList();\n\nfunction getEmployees() {\n  const employees = Array.from(list).map((element) => {\n    const nameEmp = element.textContent.trim();\n    const position = element.dataset.position;\n    const salary = element.dataset.salary;\n    const age = element.dataset.age;\n\n    return {\n      name: nameEmp,\n      position,\n      salary,\n      age,\n    };\n  });\n\n  return employees;\n}\n\ngetEmployees();\n"],"names":["employeesList","parentLi","list","document","querySelectorAll","Array","from","map","element","parseFloat","dataset","salary","replace","sort","a","b","parentNode","forEach","param","appendChild","name","textContent","trim","position","age"],"version":3,"file":"index.1b97b35b.js.map"}